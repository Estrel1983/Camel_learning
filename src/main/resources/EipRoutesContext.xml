<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean id="properties" class="org.apache.camel.component.properties.PropertiesComponent">
        <property name="location" value="classpath:additional.properties"/>
    </bean>
        <camel:camelContext id="eip_routes">
            <camel:route>
                <camel:from uri="undertow:{{undertow.http}}/filtersInRout"/>
                <camel:filter>
                    <camel:simple>${header.filtered} == 'true'</camel:simple>
                    <camel:log message="Passed the filter."/>
                    <camel:stop/>
                </camel:filter>
                <camel:log message="Did not pass the filter"/>
            </camel:route>
            <camel:route>
                <camel:from uri="undertow:{{undertow.http}}/complexFiltersInRout"/>
                <camel:filter statusPropertyName="isFiltered">
                    <camel:method beanType="org.learning.camel.bean.MessageFilterBean" method="allowedOnlyUnique"/>
                    <camel:log message="Passed the filter - ${body}"/>
                    <camel:log message="Now with property ${exchangeProperty.isFiltered}"/>
                    <camel:stop/>
                </camel:filter>
                <camel:log message="This string already exists - ${body}"/>
                <camel:log message="Now with property ${exchangeProperty.isFiltered}"/>
            </camel:route>
            <camel:route>
                <camel:from uri="undertow:{{undertow.http}}/test-endpoint"/>
                <camel:choice>
                    <camel:description>We determine whether the file needs to be copied based on the "isCopied" header</camel:description>
                    <camel:when>
                        <camel:simple>${header.isCopied} == 'true'</camel:simple>
                        <camel:log message="Will be saved"/>
                        <camel:toD uri="file:data/outbox/${header.Folder}"/>
                    </camel:when>
                    <camel:otherwise>
                        <camel:log message="Will not be saved"/>
                        <camel:stop/>
                    </camel:otherwise>
                </camel:choice>
            </camel:route>
            <camel:route>
                <camel:from uri="undertow:{{undertow.http}}/routAfterChoice"/>
                <camel:choice>
                    <camel:when>
                        <camel:simple>${header.isCopied} == 'true'</camel:simple>
                        <camel:log message="Will be saved"/>
                    </camel:when>
                    <camel:when>
                        <camel:simple>${header.isCopied} == 'false'</camel:simple>
                        <camel:log message="Will not be saved"/>
                    </camel:when>
                    <camel:otherwise>
                        <camel:log message="Everything is broken"/>
                        <camel:stop/>
                    </camel:otherwise>
                </camel:choice>
                <camel:log message="Routing after choice"/>
            </camel:route>
            <camel:route>
                <camel:from uri="undertow:{{undertow.http}}/cb_router"/>
                <camel:choice precondition="true">
                    <camel:when>
                        <camel:simple>{{?foo}}</camel:simple>
                        <camel:log message="This route for foo"/>
                        <camel:stop/>
                    </camel:when>
                    <camel:when>
                        <camel:simple>{{?bar}}</camel:simple>
                        <camel:log message="This route for bar"/>
                        <camel:stop/>
                    </camel:when>
                    <camel:otherwise>
                        <camel:log message="Otherwise rout"/>
                        <camel:stop/>
                    </camel:otherwise>
                </camel:choice>
            </camel:route>
        </camel:camelContext>
</beans>