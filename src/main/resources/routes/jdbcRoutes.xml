<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring
        http://camel.apache.org/schema/spring/camel-spring.xsd">
    <camel:routeContext id="jdbcRoutes">
        <camel:route>
            <camel:from uri="undertow:{{undertow.http}}/card"/>
            <camel:choice>
                <camel:when>
                    <camel:simple>${header.CamelHttpMethod} == 'GET'</camel:simple>
                    <camel:to uri="direct:getCard"/>
                </camel:when>
                <camel:when>
                    <camel:simple>${header.CamelHttpMethod} == 'POST'</camel:simple>
                    <camel:to uri="direct:addCard"/>
                </camel:when>
                <camel:otherwise>
                    <camel:to uri="direct:errorHandler"/>
                </camel:otherwise>
            </camel:choice>
        </camel:route>
        <camel:route>
            <camel:from uri="undertow:{{undertow.http}}/artist"/>
            <camel:choice>
                <camel:when>
                    <camel:simple>${header.CamelHttpMethod} == 'GET'</camel:simple>
                    <camel:to uri="direct:getArtist"/>
                </camel:when>
                <camel:when>
                    <camel:simple>${header.CamelHttpMethod} == 'POST'</camel:simple>
                    <camel:to uri="direct:createArtist"/>
                </camel:when>
                <camel:otherwise>
                    <camel:to uri="direct:errorHandler"/>
                </camel:otherwise>
            </camel:choice>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:addCard"/>
            <camel:convertBodyTo type="org.learning.camel.entity.MtgCardInsertRequest"/>
            <camel:setHeader name="artist_name">
                <camel:simple>${body.artistName}</camel:simple>
            </camel:setHeader>
            <camel:setHeader name="setName">
                <camel:simple>${body.setName}</camel:simple>
            </camel:setHeader>
            <camel:enrich aggregationStrategy="cardInsertAggregation" aggregationStrategyMethodName="aggregateCardAndArtist">
                <camel:constant>direct:getArtistByName</camel:constant>
            </camel:enrich>
            <camel:enrich aggregationStrategy="cardInsertAggregation" aggregationStrategyMethodName="aggregateCardAndSet">
                <camel:constant>direct:getSetByName</camel:constant>
            </camel:enrich>
            <camel:convertBodyTo type="String"/>
            <camel:to uri="jdbc:dataSource"/>
            <camel:to uri="direct:finalInsertProcessing"/>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:getCard"/>
            <camel:choice>
                <camel:when>
                    <camel:simple>${header.id} != null</camel:simple>
                    <camel:setBody>
                        <camel:constant>SELECT * FROM public.cards WHERE id = ${headers.id}</camel:constant>
                    </camel:setBody>
                </camel:when>
                <camel:otherwise>
                    <camel:setBody>
                        <camel:constant>SELECT * FROM public.cards</camel:constant>
                    </camel:setBody>
                </camel:otherwise>
            </camel:choice>
            <camel:to uri="jdbc:dataSource"/>
            <camel:marshal>
                <camel:json library="Jackson"/>
            </camel:marshal>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:getSetByName"/>
            <camel:setBody>
                <camel:constant>SELECT * FROM public.setname WHERE set_name = :?setName</camel:constant>
            </camel:setBody>
            <camel:to uri="jdbc:dataSource?useHeadersAsParameters=true&amp;outputType=SelectOne&amp;outputClass=org.learning.camel.entity.Set"/>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:getArtistByName"/>
            <camel:setBody>
                <camel:constant>SELECT * FROM public.artists WHERE artist_name = :?artist_name</camel:constant>
            </camel:setBody>
            <camel:to uri="jdbc:dataSource?useHeadersAsParameters=true&amp;outputType=SelectOne&amp;outputClass=org.learning.camel.entity.Artist"/>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:createArtist"/>
            <camel:unmarshal>
                <camel:json library="Jackson"/>
            </camel:unmarshal>
            <camel:process ref="artistQueryProcessor"/>
            <camel:to uri="jdbc:dataSource"/>
            <camel:to uri="direct:finalInsertProcessing"/>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:getArtist"/>
            <camel:setBody>
                <camel:simple>SELECT * FROM public.artists</camel:simple>
            </camel:setBody>
            <camel:to uri="jdbc:dataSource"/>
            <camel:marshal>
                <camel:json library="Jackson"/>
            </camel:marshal>
            <camel:log message="Result: ${body}"/>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:errorHandler"/>
            <camel:log message="HTTP method ${header.CamelHttpMethod} is not maintained"/>
            <camel:setHeader name="CamelHttpResponseCode">
                <camel:constant>403</camel:constant>
            </camel:setHeader>
            <camel:setBody>
                <camel:constant>Forbidden: Invalid token</camel:constant>
            </camel:setBody>
        </camel:route>
        <camel:route>
            <camel:from uri="direct:finalInsertProcessing"/>
            <camel:filter>
                <camel:simple>${header.CamelJdbcUpdateCount} != 1</camel:simple>
                <camel:to uri="direct:errorHandler"/>
                <camel:stop/>
            </camel:filter>
            <camel:setHeader name="CamelHttpResponseCode">
                <camel:constant>201</camel:constant>
            </camel:setHeader>
            <camel:setBody>
                <camel:constant>New record successfully added</camel:constant>
            </camel:setBody>
        </camel:route>
    </camel:routeContext>
</beans>
